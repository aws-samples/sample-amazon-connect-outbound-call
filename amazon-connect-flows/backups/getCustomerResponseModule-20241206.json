{
  "Version": "2019-10-30",
  "StartAction": "Collect Customer Input",
  "Metadata": {
    "entryPointPosition": {
      "x": -51.2,
      "y": -4.8
    },
    "ActionMetadata": {
      "Prompt Accepted Modification": {
        "position": {
          "x": 1320.8,
          "y": -227.2
        },
        "isFriendlyName": true
      },
      "03568df1-0e8f-4bb6-a18d-d8b656d95d94": {
        "position": {
          "x": 1569.6,
          "y": -168.8
        }
      },
      "6f7769dc-41f9-4604-b9fa-e9909f8948bb": {
        "position": {
          "x": 1569.6,
          "y": -623.2
        }
      },
      "648870ce-ef05-47fc-ac32-d3548cd7bba0": {
        "position": {
          "x": 1568,
          "y": -404
        }
      },
      "Prompt Rejected Instruction": {
        "position": {
          "x": 1318.4,
          "y": -453.6
        },
        "isFriendlyName": true
      },
      "08768330-2878-4b9c-b9b5-99bfee378833": {
        "position": {
          "x": 1817.6,
          "y": 78.4
        }
      },
      "bc86253f-3cf5-4e49-8582-87c9dd292b77": {
        "position": {
          "x": 1562.4,
          "y": 82.4
        }
      },
      "Update Modified Value": {
        "position": {
          "x": 1076.8,
          "y": -220.8
        },
        "isFriendlyName": true,
        "parameters": {
          "LambdaFunctionARN": {
            "useDynamic": true
          }
        },
        "dynamicMetadata": {
          "action": false,
          "result": false
        },
        "useDynamic": true
      },
      "Prompt System Error": {
        "position": {
          "x": 1312.8,
          "y": 77.6
        },
        "isFriendlyName": true
      },
      "Prompt Confirmed Instruction": {
        "position": {
          "x": 1316.8,
          "y": -678.4
        },
        "isFriendlyName": true
      },
      "73f0c61a-1357-488a-b3d6-504f0e68ad75": {
        "position": {
          "x": 1816,
          "y": 342.4
        }
      },
      "989ff4f5-ece5-4a46-8fc7-bd76368a647f": {
        "position": {
          "x": 1560.8,
          "y": 346.4
        }
      },
      "Prompt Timeout": {
        "position": {
          "x": 1311.2,
          "y": 343.2
        },
        "isFriendlyName": true
      },
      "Update Timeout Status": {
        "position": {
          "x": 1077.6,
          "y": 350.4
        },
        "isFriendlyName": true,
        "parameters": {
          "LambdaFunctionARN": {
            "useDynamic": true
          }
        },
        "dynamicMetadata": {
          "action": false,
          "status": false
        },
        "useDynamic": true
      },
      "Update Reject Response": {
        "position": {
          "x": 1071.2,
          "y": -444
        },
        "isFriendlyName": true,
        "parameters": {
          "LambdaFunctionARN": {
            "useDynamic": true
          }
        },
        "dynamicMetadata": {
          "action": false,
          "result": false
        },
        "useDynamic": true
      },
      "Update Complete Status": {
        "position": {
          "x": 1064.8,
          "y": -642.4
        },
        "isFriendlyName": true,
        "parameters": {
          "LambdaFunctionARN": {
            "useDynamic": true
          }
        },
        "dynamicMetadata": {
          "action": false,
          "result": false
        },
        "useDynamic": true
      },
      "825414db-d0b9-4c7e-9e9d-fd176eee656f": {
        "position": {
          "x": 436.8,
          "y": 419.2
        }
      },
      "repeatInstruction Loop": {
        "position": {
          "x": 194.4,
          "y": 211.2
        },
        "isFriendlyName": true
      },
      "a2aa83c2-dee4-4d4d-934a-2816a8aee07b": {
        "position": {
          "x": 196.8,
          "y": 418.4
        },
        "isFriendlyName": false
      },
      "9999c658-9681-424f-91dd-7e82aca7ef6f": {
        "position": {
          "x": 809.6,
          "y": -36.8
        },
        "parameters": {
          "Attributes": {
            "beneAccountNo": {
              "useDynamic": true
            }
          }
        },
        "dynamicParams": [
          "beneAccountNo"
        ]
      },
      "1d863bd3-f027-4fb3-92c4-901ec7600e2b": {
        "position": {
          "x": 806.4,
          "y": -222.4
        },
        "isFriendlyName": false,
        "parameters": {
          "Attributes": {
            "beneAccountNo": {
              "useDynamic": true
            }
          }
        },
        "dynamicParams": [
          "beneAccountNo"
        ]
      },
      "d1a9dd93-d6ae-4e49-bcec-69e14da5d659": {
        "position": {
          "x": 817.6,
          "y": 240.8
        }
      },
      "Update Error Status": {
        "position": {
          "x": 1080.8,
          "y": 80
        },
        "isFriendlyName": true,
        "parameters": {
          "LambdaFunctionARN": {
            "useDynamic": true
          }
        },
        "dynamicMetadata": {
          "action": false,
          "status": false
        },
        "useDynamic": true
      },
      "Collect Customer Input": {
        "position": {
          "x": 174.4,
          "y": -180.8
        },
        "isFriendlyName": true,
        "parameters": {
          "LexV2Bot": {
            "AliasArn": {
              "displayName": "connectBotAlias",
              "useLexBotDropdown": true,
              "lexV2BotName": "OutboundCall-MainBot"
            }
          }
        },
        "useLexBotDropdown": true,
        "lexV2BotName": "OutboundCall-MainBot",
        "lexV2BotAliasName": "connectBotAlias",
        "conditionMetadata": [
          {
            "id": "ac2fbe2e-77de-481d-93e2-293d96952271",
            "operator": {
              "name": "Equals",
              "value": "Equals",
              "shortDisplay": "="
            },
            "value": "confirmInstruction"
          },
          {
            "id": "2ccf62ec-5f72-4538-b8f9-e02dc64da095",
            "operator": {
              "name": "Equals",
              "value": "Equals",
              "shortDisplay": "="
            },
            "value": "denyInstruction"
          },
          {
            "id": "0597ec2c-f96c-4461-98b1-f2cf678841d5",
            "operator": {
              "name": "Equals",
              "value": "Equals",
              "shortDisplay": "="
            },
            "value": "modifyInstruction"
          },
          {
            "id": "71e9fd6c-5362-4ac0-a50a-b0376cfd13df",
            "operator": {
              "name": "Equals",
              "value": "Equals",
              "shortDisplay": "="
            },
            "value": "repeatInstruction"
          }
        ]
      },
      "Ask for Modified Input": {
        "position": {
          "x": 538.4,
          "y": -168
        },
        "isFriendlyName": true,
        "parameters": {
          "LexV2Bot": {
            "AliasArn": {
              "displayName": "modifyBotAlias",
              "useLexBotDropdown": true,
              "lexV2BotName": "OutboundCall-ModificationBot"
            }
          }
        },
        "useLexBotDropdown": true,
        "lexV2BotName": "OutboundCall-ModificationBot",
        "lexV2BotAliasName": "modifyBotAlias",
        "conditionMetadata": [
          {
            "id": "fa297847-0b14-43a8-9b89-07f7563f9322",
            "operator": {
              "name": "Equals",
              "value": "Equals",
              "shortDisplay": "="
            },
            "value": "modifyBeneAccountNo"
          },
          {
            "id": "08da5d19-b836-48e5-bc4c-cc556f16439c",
            "operator": {
              "name": "Equals",
              "value": "Equals",
              "shortDisplay": "="
            },
            "value": "modifyValueDate"
          }
        ]
      }
    },
    "Annotations": [],
    "name": "getCustomerResponseModule",
    "description": "Flow Module for getting Customer Response",
    "status": "published",
    "hash": {}
  },
  "Actions": [
    {
      "Parameters": {
        "SSML": "<speak>Thank you, we have taken note of the changes and will process the instruction accordingly</speak>"
      },
      "Identifier": "Prompt Accepted Modification",
      "Type": "MessageParticipant",
      "Transitions": {
        "NextAction": "03568df1-0e8f-4bb6-a18d-d8b656d95d94",
        "Errors": [
          {
            "NextAction": "03568df1-0e8f-4bb6-a18d-d8b656d95d94",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {},
      "Identifier": "03568df1-0e8f-4bb6-a18d-d8b656d95d94",
      "Type": "EndFlowModuleExecution",
      "Transitions": {}
    },
    {
      "Parameters": {},
      "Identifier": "6f7769dc-41f9-4604-b9fa-e9909f8948bb",
      "Type": "EndFlowModuleExecution",
      "Transitions": {}
    },
    {
      "Parameters": {},
      "Identifier": "648870ce-ef05-47fc-ac32-d3548cd7bba0",
      "Type": "EndFlowModuleExecution",
      "Transitions": {}
    },
    {
      "Parameters": {
        "SSML": "<speak>Thank you, we will check internally and revert. Thank you</speak>"
      },
      "Identifier": "Prompt Rejected Instruction",
      "Type": "MessageParticipant",
      "Transitions": {
        "NextAction": "648870ce-ef05-47fc-ac32-d3548cd7bba0",
        "Errors": [
          {
            "NextAction": "648870ce-ef05-47fc-ac32-d3548cd7bba0",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {},
      "Identifier": "08768330-2878-4b9c-b9b5-99bfee378833",
      "Type": "DisconnectParticipant",
      "Transitions": {}
    },
    {
      "Parameters": {
        "MediaStreamingState": "Disabled",
        "Participants": [
          {
            "ParticipantType": "Customer",
            "MediaDirections": [
              "To",
              "From"
            ]
          }
        ],
        "MediaStreamType": "Audio"
      },
      "Identifier": "bc86253f-3cf5-4e49-8582-87c9dd292b77",
      "Type": "UpdateContactMediaStreamingBehavior",
      "Transitions": {
        "NextAction": "08768330-2878-4b9c-b9b5-99bfee378833",
        "Errors": [
          {
            "NextAction": "08768330-2878-4b9c-b9b5-99bfee378833",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "LambdaFunctionARN": "$.Attributes.UPDATE_LAMBDA_ARN",
        "InvocationTimeLimitSeconds": "3",
        "LambdaInvocationAttributes": {
          "action": "COMPLETE",
          "result": "MODIFY"
        },
        "ResponseValidation": {
          "ResponseType": "STRING_MAP"
        }
      },
      "Identifier": "Update Modified Value",
      "Type": "InvokeLambdaFunction",
      "Transitions": {
        "NextAction": "Prompt Accepted Modification",
        "Errors": [
          {
            "NextAction": "Update Error Status",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "SSML": "<speak>Sorry, we have encountered system error and unable to process your request/speak>"
      },
      "Identifier": "Prompt System Error",
      "Type": "MessageParticipant",
      "Transitions": {
        "NextAction": "bc86253f-3cf5-4e49-8582-87c9dd292b77",
        "Errors": [
          {
            "NextAction": "bc86253f-3cf5-4e49-8582-87c9dd292b77",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "SSML": "<speak>Thank you for confirming that this instruction is correct. This concludes our call-back and we will now work to process these for you. Have a great day, good bye.</speak>"
      },
      "Identifier": "Prompt Confirmed Instruction",
      "Type": "MessageParticipant",
      "Transitions": {
        "NextAction": "6f7769dc-41f9-4604-b9fa-e9909f8948bb",
        "Errors": [
          {
            "NextAction": "6f7769dc-41f9-4604-b9fa-e9909f8948bb",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {},
      "Identifier": "73f0c61a-1357-488a-b3d6-504f0e68ad75",
      "Type": "DisconnectParticipant",
      "Transitions": {}
    },
    {
      "Parameters": {
        "MediaStreamingState": "Disabled",
        "Participants": [
          {
            "ParticipantType": "Customer",
            "MediaDirections": [
              "To",
              "From"
            ]
          }
        ],
        "MediaStreamType": "Audio"
      },
      "Identifier": "989ff4f5-ece5-4a46-8fc7-bd76368a647f",
      "Type": "UpdateContactMediaStreamingBehavior",
      "Transitions": {
        "NextAction": "73f0c61a-1357-488a-b3d6-504f0e68ad75",
        "Errors": [
          {
            "NextAction": "73f0c61a-1357-488a-b3d6-504f0e68ad75",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "SSML": "<speak>Sorry you have exceed the allowed time</speak>"
      },
      "Identifier": "Prompt Timeout",
      "Type": "MessageParticipant",
      "Transitions": {
        "NextAction": "989ff4f5-ece5-4a46-8fc7-bd76368a647f",
        "Errors": [
          {
            "NextAction": "989ff4f5-ece5-4a46-8fc7-bd76368a647f",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "LambdaFunctionARN": "$.Attributes.UPDATE_LAMBDA_ARN",
        "InvocationTimeLimitSeconds": "3",
        "LambdaInvocationAttributes": {
          "action": "updateStatus",
          "status": "TIME_OUT"
        },
        "ResponseValidation": {
          "ResponseType": "STRING_MAP"
        }
      },
      "Identifier": "Update Timeout Status",
      "Type": "InvokeLambdaFunction",
      "Transitions": {
        "NextAction": "Prompt Timeout",
        "Errors": [
          {
            "NextAction": "Prompt Timeout",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "LambdaFunctionARN": "$.Attributes.UPDATE_LAMBDA_ARN",
        "InvocationTimeLimitSeconds": "3",
        "LambdaInvocationAttributes": {
          "action": "COMPLETE",
          "result": "REJECT"
        },
        "ResponseValidation": {
          "ResponseType": "STRING_MAP"
        }
      },
      "Identifier": "Update Reject Response",
      "Type": "InvokeLambdaFunction",
      "Transitions": {
        "NextAction": "Prompt Rejected Instruction",
        "Errors": [
          {
            "NextAction": "Update Error Status",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "LambdaFunctionARN": "$.Attributes.UPDATE_LAMBDA_ARN",
        "InvocationTimeLimitSeconds": "3",
        "LambdaInvocationAttributes": {
          "action": "COMPLETE",
          "result": "CONFIRM"
        },
        "ResponseValidation": {
          "ResponseType": "STRING_MAP"
        }
      },
      "Identifier": "Update Complete Status",
      "Type": "InvokeLambdaFunction",
      "Transitions": {
        "NextAction": "Prompt Confirmed Instruction",
        "Errors": [
          {
            "NextAction": "Update Error Status",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "SSML": "<speak>Sorry we didn't quite get that.  Can you please repeat that for us or speak up louder as we weren’t able to capture your voice properly</speak>"
      },
      "Identifier": "825414db-d0b9-4c7e-9e9d-fd176eee656f",
      "Type": "MessageParticipant",
      "Transitions": {
        "NextAction": "Collect Customer Input",
        "Errors": [
          {
            "NextAction": "Collect Customer Input",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "LoopCount": "99"
      },
      "Identifier": "repeatInstruction Loop",
      "Type": "Loop",
      "Transitions": {
        "NextAction": "Update Timeout Status",
        "Conditions": [
          {
            "NextAction": "Collect Customer Input",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "ContinueLooping"
              ]
            }
          },
          {
            "NextAction": "Update Timeout Status",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "DoneLooping"
              ]
            }
          }
        ]
      }
    },
    {
      "Parameters": {
        "LoopCount": "3"
      },
      "Identifier": "a2aa83c2-dee4-4d4d-934a-2816a8aee07b",
      "Type": "Loop",
      "Transitions": {
        "NextAction": "Update Timeout Status",
        "Conditions": [
          {
            "NextAction": "825414db-d0b9-4c7e-9e9d-fd176eee656f",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "ContinueLooping"
              ]
            }
          },
          {
            "NextAction": "Update Timeout Status",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "DoneLooping"
              ]
            }
          }
        ]
      }
    },
    {
      "Parameters": {
        "Attributes": {
          "beneAccountNo": "$.Lex.Slots.beneAccount"
        },
        "TargetContact": "Current"
      },
      "Identifier": "9999c658-9681-424f-91dd-7e82aca7ef6f",
      "Type": "UpdateContactAttributes",
      "Transitions": {
        "NextAction": "Update Modified Value",
        "Errors": [
          {
            "NextAction": "Update Error Status",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "Attributes": {
          "beneAccountNo": "$.Lex.Slots.beneAccount"
        },
        "TargetContact": "Current"
      },
      "Identifier": "1d863bd3-f027-4fb3-92c4-901ec7600e2b",
      "Type": "UpdateContactAttributes",
      "Transitions": {
        "NextAction": "Update Modified Value",
        "Errors": [
          {
            "NextAction": "Update Error Status",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "LoopCount": "3"
      },
      "Identifier": "d1a9dd93-d6ae-4e49-bcec-69e14da5d659",
      "Type": "Loop",
      "Transitions": {
        "NextAction": "Update Timeout Status",
        "Conditions": [
          {
            "NextAction": "Ask for Modified Input",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "ContinueLooping"
              ]
            }
          },
          {
            "NextAction": "Update Timeout Status",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "DoneLooping"
              ]
            }
          }
        ]
      }
    },
    {
      "Parameters": {
        "LambdaFunctionARN": "$.Attributes.UPDATE_LAMBDA_ARN",
        "InvocationTimeLimitSeconds": "3",
        "LambdaInvocationAttributes": {
          "action": "updateStatus",
          "status": "ERROR"
        },
        "ResponseValidation": {
          "ResponseType": "STRING_MAP"
        }
      },
      "Identifier": "Update Error Status",
      "Type": "InvokeLambdaFunction",
      "Transitions": {
        "NextAction": "Prompt System Error",
        "Errors": [
          {
            "NextAction": "Prompt System Error",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "SSML": "<speak>The instruction that we've received are: Beneficiary Name $.Attributes.beneficiaryName, Beneficiary Account Number <say-as interpret-as='characters'>$.Attributes.beneficiaryAccountNumber</say-as>, Beneficiary $.Attributes.beneficiaryBank, Debit Account <say-as interpret-as='characters'>$.Attributes.orderingAccountNumber</say-as>, amount <say-as interpret-as='currency'>USD$.Attributes.amt</say-as>, value date <say-as interpret-as='date' format='mdy'>$.Attributes.valueDate</say-as>. Is this correct? Please answer with an answer of Yes or No.  You can also say Modify to amend the instruction or Repeat for me to repeat the instructions again for you.</speak>",
        "LexV2Bot": {
          "AliasArn": "arn:aws:lex:ap-southeast-1:891377269035:bot-alias/RYD0H3UL1Y/OQA2TANECD"
        }
      },
      "Identifier": "Collect Customer Input",
      "Type": "ConnectParticipantWithLexBot",
      "Transitions": {
        "NextAction": "Update Error Status",
        "Conditions": [
          {
            "NextAction": "Update Complete Status",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "confirmInstruction"
              ]
            }
          },
          {
            "NextAction": "Update Reject Response",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "denyInstruction"
              ]
            }
          },
          {
            "NextAction": "Ask for Modified Input",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "modifyInstruction"
              ]
            }
          },
          {
            "NextAction": "repeatInstruction Loop",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "repeatInstruction"
              ]
            }
          }
        ],
        "Errors": [
          {
            "NextAction": "a2aa83c2-dee4-4d4d-934a-2816a8aee07b",
            "ErrorType": "NoMatchingCondition"
          },
          {
            "NextAction": "Update Error Status",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "SSML": "<speak>Please say the field name: Beneficiary Account Number or Value Date</speak>",
        "LexV2Bot": {
          "AliasArn": "arn:aws:lex:ap-southeast-1:891377269035:bot-alias/7FC0JUBHM5/JWW2Z6DUMF"
        }
      },
      "Identifier": "Ask for Modified Input",
      "Type": "ConnectParticipantWithLexBot",
      "Transitions": {
        "NextAction": "Update Error Status",
        "Conditions": [
          {
            "NextAction": "1d863bd3-f027-4fb3-92c4-901ec7600e2b",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "modifyBeneAccountNo"
              ]
            }
          },
          {
            "NextAction": "9999c658-9681-424f-91dd-7e82aca7ef6f",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "modifyValueDate"
              ]
            }
          }
        ],
        "Errors": [
          {
            "NextAction": "d1a9dd93-d6ae-4e49-bcec-69e14da5d659",
            "ErrorType": "NoMatchingCondition"
          },
          {
            "NextAction": "Update Error Status",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    }
  ],
  "Settings": {
    "InputParameters": [],
    "OutputParameters": [],
    "Transitions": [
      {
        "DisplayName": "Success",
        "ReferenceName": "Success",
        "Description": ""
      },
      {
        "DisplayName": "Error",
        "ReferenceName": "Error",
        "Description": ""
      }
    ]
  }
}