{
  "Version": "2019-10-30",
  "StartAction": "Prompt Customer Name",
  "Metadata": {
    "entryPointPosition": {
      "x": 72,
      "y": -3.2
    },
    "ActionMetadata": {
      "2938f9ab-080b-4ba6-a930-7e0db1b83ab8": {
        "position": {
          "x": 926.4,
          "y": -93.6
        }
      },
      "94007471-32ee-494b-89a9-d8f185be6d01": {
        "position": {
          "x": 1604,
          "y": 179.2
        }
      },
      "Update Name": {
        "position": {
          "x": 695.2,
          "y": -117.6
        },
        "isFriendlyName": true,
        "parameters": {
          "LambdaFunctionARN": {
            "useDynamic": true
          }
        },
        "dynamicMetadata": {
          "action": false
        },
        "useDynamic": true
      },
      "Error Prompt": {
        "position": {
          "x": 1142.4,
          "y": 106.4
        },
        "isFriendlyName": true
      },
      "4687e9a8-35ce-4673-8890-9181620a192f": {
        "position": {
          "x": 1376,
          "y": 108.8
        }
      },
      "Timeout Asking for Name": {
        "position": {
          "x": 468.8,
          "y": 470.4
        },
        "isFriendlyName": true,
        "parameters": {
          "LambdaFunctionARN": {
            "useDynamic": true
          }
        },
        "dynamicMetadata": {
          "action": false,
          "status": false
        },
        "useDynamic": true
      },
      "Apology Prompt": {
        "position": {
          "x": 701.6,
          "y": 468.8
        },
        "isFriendlyName": true
      },
      "Set Customer Name": {
        "position": {
          "x": 457.6,
          "y": -5.6
        },
        "isFriendlyName": true,
        "parameters": {
          "Attributes": {
            "firstName": {
              "useDynamic": true
            },
            "lastName": {
              "useDynamic": true
            }
          }
        },
        "dynamicParams": [
          "firstName",
          "lastName"
        ]
      },
      "Update Error Status": {
        "position": {
          "x": 926.4,
          "y": 104
        },
        "isFriendlyName": true,
        "parameters": {
          "LambdaFunctionARN": {
            "useDynamic": true
          }
        },
        "dynamicMetadata": {
          "action": false,
          "status": false
        },
        "useDynamic": true
      },
      "21a85f80-6df8-4dfc-8a9c-ca8315130699": {
        "position": {
          "x": 223.2,
          "y": 269.6
        }
      },
      "Repeat Prompt": {
        "position": {
          "x": 464,
          "y": 267.2
        },
        "isFriendlyName": true
      },
      "Prompt Customer Name": {
        "position": {
          "x": 222.4,
          "y": -3.2
        },
        "isFriendlyName": true,
        "parameters": {
          "LexV2Bot": {
            "AliasArn": {
              "useDynamic": true
            }
          }
        },
        "useDynamicLexBotArn": true,
        "lexV2BotName": "",
        "conditionMetadata": [
          {
            "id": "82af16dd-84b8-4cb5-9adb-be08467fd9c7",
            "operator": {
              "name": "Equals",
              "value": "Equals",
              "shortDisplay": "="
            },
            "value": "getCustomerName"
          }
        ]
      }
    },
    "Annotations": [],
    "name": "getCustNameFlowModule-Final",
    "description": "Flow Module for getting Customer Name",
    "status": "published",
    "hash": {}
  },
  "Actions": [
    {
      "Parameters": {},
      "Identifier": "2938f9ab-080b-4ba6-a930-7e0db1b83ab8",
      "Type": "EndFlowModuleExecution",
      "Transitions": {}
    },
    {
      "Parameters": {},
      "Identifier": "94007471-32ee-494b-89a9-d8f185be6d01",
      "Type": "DisconnectParticipant",
      "Transitions": {}
    },
    {
      "Parameters": {
        "LambdaFunctionARN": "$.Attributes.UPDATE_LAMBDA_ARN",
        "InvocationTimeLimitSeconds": "2",
        "LambdaInvocationAttributes": {
          "action": "updateName"
        },
        "ResponseValidation": {
          "ResponseType": "STRING_MAP"
        }
      },
      "Identifier": "Update Name",
      "Type": "InvokeLambdaFunction",
      "Transitions": {
        "NextAction": "2938f9ab-080b-4ba6-a930-7e0db1b83ab8",
        "Errors": [
          {
            "NextAction": "Update Error Status",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "SSML": "<speak>Sorry, we have encountered system error and unable to process your request</speak>"
      },
      "Identifier": "Error Prompt",
      "Type": "MessageParticipant",
      "Transitions": {
        "NextAction": "4687e9a8-35ce-4673-8890-9181620a192f",
        "Errors": [
          {
            "NextAction": "4687e9a8-35ce-4673-8890-9181620a192f",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "MediaStreamingState": "Disabled",
        "Participants": [
          {
            "ParticipantType": "Customer",
            "MediaDirections": [
              "To",
              "From"
            ]
          }
        ],
        "MediaStreamType": "Audio"
      },
      "Identifier": "4687e9a8-35ce-4673-8890-9181620a192f",
      "Type": "UpdateContactMediaStreamingBehavior",
      "Transitions": {
        "NextAction": "94007471-32ee-494b-89a9-d8f185be6d01",
        "Errors": [
          {
            "NextAction": "94007471-32ee-494b-89a9-d8f185be6d01",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "LambdaFunctionARN": "$.Attributes.UPDATE_LAMBDA_ARN",
        "InvocationTimeLimitSeconds": "3",
        "LambdaInvocationAttributes": {
          "action": "updateStatus",
          "status": "TIME_OUT"
        },
        "ResponseValidation": {
          "ResponseType": "STRING_MAP"
        }
      },
      "Identifier": "Timeout Asking for Name",
      "Type": "InvokeLambdaFunction",
      "Transitions": {
        "NextAction": "Apology Prompt",
        "Errors": [
          {
            "NextAction": "Apology Prompt",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "SSML": "<speak>Sorry we couldn't get your name</speak>"
      },
      "Identifier": "Apology Prompt",
      "Type": "MessageParticipant",
      "Transitions": {
        "NextAction": "4687e9a8-35ce-4673-8890-9181620a192f",
        "Errors": [
          {
            "NextAction": "4687e9a8-35ce-4673-8890-9181620a192f",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "Attributes": {
          "firstName": "$.Lex.Slots.firstName",
          "lastName": "$.Lex.Slots.lastName"
        },
        "TargetContact": "Current"
      },
      "Identifier": "Set Customer Name",
      "Type": "UpdateContactAttributes",
      "Transitions": {
        "NextAction": "Update Name",
        "Errors": [
          {
            "NextAction": "Update Error Status",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "LambdaFunctionARN": "$.Attributes.UPDATE_LAMBDA_ARN",
        "InvocationTimeLimitSeconds": "3",
        "LambdaInvocationAttributes": {
          "action": "updateStatus",
          "status": "ERROR"
        },
        "ResponseValidation": {
          "ResponseType": "STRING_MAP"
        }
      },
      "Identifier": "Update Error Status",
      "Type": "InvokeLambdaFunction",
      "Transitions": {
        "NextAction": "Error Prompt",
        "Errors": [
          {
            "NextAction": "Error Prompt",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "LoopCount": "3"
      },
      "Identifier": "21a85f80-6df8-4dfc-8a9c-ca8315130699",
      "Type": "Loop",
      "Transitions": {
        "NextAction": "Timeout Asking for Name",
        "Conditions": [
          {
            "NextAction": "Repeat Prompt",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "ContinueLooping"
              ]
            }
          },
          {
            "NextAction": "Timeout Asking for Name",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "DoneLooping"
              ]
            }
          }
        ]
      }
    },
    {
      "Parameters": {
        "SSML": "<speak>Sorry we didn't quite get that.  Can you please repeat that for us or speak up louder as we werenâ€™t able to capture your voice properly</speak>"
      },
      "Identifier": "Repeat Prompt",
      "Type": "MessageParticipant",
      "Transitions": {
        "NextAction": "Prompt Customer Name",
        "Errors": [
          {
            "NextAction": "Prompt Customer Name",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    },
    {
      "Parameters": {
        "Text": "Please help us confirm your name first by stating your full name now",
        "LexV2Bot": {
          "AliasArn": "$.Attributes.LEX_CUSTOMER_NAME_BOT_ARN"
        }
      },
      "Identifier": "Prompt Customer Name",
      "Type": "ConnectParticipantWithLexBot",
      "Transitions": {
        "NextAction": "Update Error Status",
        "Conditions": [
          {
            "NextAction": "Set Customer Name",
            "Condition": {
              "Operator": "Equals",
              "Operands": [
                "getCustomerName"
              ]
            }
          }
        ],
        "Errors": [
          {
            "NextAction": "21a85f80-6df8-4dfc-8a9c-ca8315130699",
            "ErrorType": "NoMatchingCondition"
          },
          {
            "NextAction": "Update Error Status",
            "ErrorType": "NoMatchingError"
          }
        ]
      }
    }
  ],
  "Settings": {
    "InputParameters": [],
    "OutputParameters": [],
    "Transitions": [
      {
        "DisplayName": "Success",
        "ReferenceName": "Success",
        "Description": ""
      },
      {
        "DisplayName": "Error",
        "ReferenceName": "Error",
        "Description": ""
      }
    ]
  }
}